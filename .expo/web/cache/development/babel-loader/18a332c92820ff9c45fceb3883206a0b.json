{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Text } from 'react-native-paper';\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport BackButton from \"../components/BackButton\";\nimport { theme } from \"../core/theme\";\nimport { emailValidator } from \"../helpers/emailValidator\";\nimport { passwordValidator } from \"../helpers/passwordValidator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState({\n      value: '',\n      error: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState({\n      value: '',\n      error: ''\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var onLoginPressed = function onLoginPressed() {\n    var emailError = emailValidator(email.value);\n    var passwordError = passwordValidator(password.value);\n    if (emailError || passwordError) {\n      setEmail(_objectSpread(_objectSpread({}, email), {}, {\n        error: emailError\n      }));\n      setPassword(_objectSpread(_objectSpread({}, password), {}, {\n        error: passwordError\n      }));\n      return;\n    }\n    navigation.reset({\n      index: 0,\n      routes: [{\n        name: 'Dashboard'\n      }]\n    });\n  };\n  return _jsxs(Background, {\n    children: [_jsx(BackButton, {\n      goBack: navigation.goBack\n    }), _jsx(Logo, {}), _jsx(Header, {\n      children: \"Welcome back.\"\n    }), _jsx(TextInput, {\n      label: \"Email\",\n      returnKeyType: \"next\",\n      value: email.value,\n      onChangeText: function onChangeText(text) {\n        return setEmail({\n          value: text,\n          error: ''\n        });\n      },\n      error: !!email.error,\n      errorText: email.error,\n      autoCapitalize: \"none\",\n      autoCompleteType: \"email\",\n      textContentType: \"emailAddress\",\n      keyboardType: \"email-address\"\n    }), _jsx(TextInput, {\n      label: \"Password\",\n      returnKeyType: \"done\",\n      value: password.value,\n      onChangeText: function onChangeText(text) {\n        return setPassword({\n          value: text,\n          error: ''\n        });\n      },\n      error: !!password.error,\n      errorText: password.error,\n      secureTextEntry: true\n    }), _jsx(View, {\n      style: styles.forgotPassword,\n      children: _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('ResetPasswordScreen');\n        },\n        children: _jsx(Text, {\n          style: styles.forgot,\n          children: \"Forgot your password?\"\n        })\n      })\n    }), _jsx(Button, {\n      mode: \"contained\",\n      onPress: onLoginPressed,\n      children: \"Login\"\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(Text, {\n        children: \"Don\\u2019t have an account? \"\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.replace('RegisterScreen');\n        },\n        children: _jsx(Text, {\n          style: styles.link,\n          children: \"Sign up\"\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 24\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4\n  },\n  forgot: {\n    fontSize: 13,\n    color: theme.colors.secondary\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  }\n});","map":{"version":3,"names":["React","useState","Text","Background","Logo","Header","Button","TextInput","BackButton","theme","emailValidator","passwordValidator","LoginScreen","navigation","value","error","email","setEmail","password","setPassword","onLoginPressed","emailError","passwordError","reset","index","routes","name","goBack","text","styles","forgotPassword","navigate","forgot","row","replace","link","StyleSheet","create","width","alignItems","marginBottom","flexDirection","marginTop","fontSize","color","colors","secondary","fontWeight","primary"],"sources":["D:/CPAD_Healthcare App/cpad-online-healthcare/src/screens/LoginScreen.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { TouchableOpacity, StyleSheet, View } from 'react-native'\r\nimport { Text } from 'react-native-paper'\r\nimport Background from '../components/Background'\r\nimport Logo from '../components/Logo'\r\nimport Header from '../components/Header'\r\nimport Button from '../components/Button'\r\nimport TextInput from '../components/TextInput'\r\nimport BackButton from '../components/BackButton'\r\nimport { theme } from '../core/theme'\r\nimport { emailValidator } from '../helpers/emailValidator'\r\nimport { passwordValidator } from '../helpers/passwordValidator'\r\n\r\nexport default function LoginScreen({ navigation }) {\r\n  const [email, setEmail] = useState({ value: '', error: '' })\r\n  const [password, setPassword] = useState({ value: '', error: '' })\r\n\r\n  const onLoginPressed = () => {\r\n    const emailError = emailValidator(email.value)\r\n    const passwordError = passwordValidator(password.value)\r\n    if (emailError || passwordError) {\r\n      setEmail({ ...email, error: emailError })\r\n      setPassword({ ...password, error: passwordError })\r\n      return\r\n    }\r\n    navigation.reset({\r\n      index: 0,\r\n      routes: [{ name: 'Dashboard' }],\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Background>\r\n      <BackButton goBack={navigation.goBack} />\r\n      <Logo />\r\n      <Header>Welcome back.</Header>\r\n      <TextInput\r\n        label=\"Email\"\r\n        returnKeyType=\"next\"\r\n        value={email.value}\r\n        onChangeText={(text) => setEmail({ value: text, error: '' })}\r\n        error={!!email.error}\r\n        errorText={email.error}\r\n        autoCapitalize=\"none\"\r\n        autoCompleteType=\"email\"\r\n        textContentType=\"emailAddress\"\r\n        keyboardType=\"email-address\"\r\n      />\r\n      <TextInput\r\n        label=\"Password\"\r\n        returnKeyType=\"done\"\r\n        value={password.value}\r\n        onChangeText={(text) => setPassword({ value: text, error: '' })}\r\n        error={!!password.error}\r\n        errorText={password.error}\r\n        secureTextEntry\r\n      />\r\n      <View style={styles.forgotPassword}>\r\n        <TouchableOpacity\r\n          onPress={() => navigation.navigate('ResetPasswordScreen')}\r\n        >\r\n          <Text style={styles.forgot}>Forgot your password?</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <Button mode=\"contained\" onPress={onLoginPressed}>\r\n        Login\r\n      </Button>\r\n      <View style={styles.row}>\r\n        <Text>Donâ€™t have an account? </Text>\r\n        <TouchableOpacity onPress={() => navigation.replace('RegisterScreen')}>\r\n          <Text style={styles.link}>Sign up</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </Background>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  forgotPassword: {\r\n    width: '100%',\r\n    alignItems: 'flex-end',\r\n    marginBottom: 24,\r\n  },\r\n  row: {\r\n    flexDirection: 'row',\r\n    marginTop: 4,\r\n  },\r\n  forgot: {\r\n    fontSize: 13,\r\n    color: theme.colors.secondary,\r\n  },\r\n  link: {\r\n    fontWeight: 'bold',\r\n    color: theme.colors.primary,\r\n  },\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}